package org.example;

import java.io.*;
import java.util.Random;
import java.util.Scanner;

public class Game {
    private static final String RECORD_FILE = "records.txt";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();
        boolean playAgain = true;
        int bestScore = loadBestScore();

        while (playAgain) {
            int secretNumber = random.nextInt(100) + 1;
            int attempts = 0;
            int guess = -1;

            System.out.println("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å!");
            if (bestScore != Integer.MAX_VALUE) {
                System.out.println("–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: " + bestScore + " –ø–æ–ø—ã—Ç–æ–∫");
            }

            while (guess != secretNumber) {
                System.out.print("–í–∞—à –≤–∞—Ä–∏–∞–Ω—Ç: ");
                guess = scanner.nextInt();
                attempts++;

                if (guess < 1 || guess > 100) {
                    System.out.println("–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100.");
                    continue;
                }

                if (guess < secretNumber) {
                    System.out.println("–°–ª–∏—à–∫–æ–º –º–∞–ª–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–∏—Å–ª–æ –ø–æ–±–æ–ª—å—à–µ.");
                } else if (guess > secretNumber) {
                    System.out.println("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–∏—Å–ª–æ –ø–æ–º–µ–Ω—å—à–µ.");
                }
            }

            System.out.println("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ –∑–∞ " + attempts + " –ø–æ–ø—ã—Ç–æ–∫.");
            if (attempts < bestScore) {
                bestScore = attempts;
                saveBestScore(bestScore);
                System.out.println("üéâ –ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥!");
            }

            System.out.print("–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑? (–¥/–Ω): ");
            playAgain = scanner.next().equalsIgnoreCase("–¥");
        }

        scanner.close();
    }

    private static int loadBestScore() {
        try (BufferedReader reader = new BufferedReader(new FileReader(RECORD_FILE))) {
            return Integer.parseInt(reader.readLine());
        } catch (IOException | NumberFormatException e) {
            return Integer.MAX_VALUE;
        }
    }

    private static void saveBestScore(int score) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(RECORD_FILE))) {
            writer.write(String.valueOf(score));
        } catch (IOException e) {
            System.err.println("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∫–æ—Ä–¥: " + e.getMessage());
        }
    }
}
